---
- name: Create VM facts
  ansible.builtin.set_fact:
    infrastructure_vm_deployment_id: "{{ query('community.general.random_string', upper=false, numbers=false, special=false) | first }}"

- name: Create VM facts
  ansible.builtin.set_fact:
    infrastructure_vm_name: "vm-{{ deployment_id }}-{{ app_tag }}-{{ infrastructure_vm_deployment_id }}"

- name: Output the VM name
  ansible.builtin.debug:
    var: infrastructure_vm_name

- name: Create public IP address
  azure.azcollection.azure_rm_publicipaddress:
    resource_group: "{{ resource_group }}"
    allocation_method: Static
    name: "pip-{{ deployment_id }}-{{ app_tag }}-{{ infrastructure_vm_deployment_id }}"
    location: "{{ infrastructure_region }}"
    tags: "{{ _infrastructure_tags }}"
  register: infrastructure_pip

- name: Create virtual network interface card
  azure.azcollection.azure_rm_networkinterface:
    resource_group: "{{ resource_group }}"
    name: "nic-{{ deployment_id }}-{{ app_tag }}-{{ infrastructure_vm_deployment_id }}"
    virtual_network: "{{ infrastructure_network.state.id }}"
    subnet: "{{ subnet }}"
    public_ip_name: "{{ infrastructure_pip.state.name }}"
    security_group: "{{ infrastructure_nsg.state.name }}"
    location: "{{ infrastructure_region }}"
    ip_configurations:
      - name: "{{ infrastructure_pip.state.name }}"
        public_ip_address_name: "{{ infrastructure_pip.state.name }}"
    tags: "{{ _infrastructure_tags }}"
  register: infrastructure_nic

- name: Create virtual machines
  vars:
    vm_additional_tags:
      Name: "{{ infrastructure_vm_name }}"
      app: "{{ app_tag | default('') }}"
    vm_tags: "{{ vm_additional_tags | combine(_infrastructure_tags) }}"
  azure.azcollection.azure_rm_virtualmachine:
    resource_group: "{{ resource_group }}"
    name: "{{ infrastructure_vm_name }}"
    ssh_public_keys: "{{ infrastructure_ssh_public_keys }}"
    vm_size: "{{ instance_type }}"
    admin_username: "{{ infrastructure_admin_username }}"
    ssh_password_enabled: "{{ infrastructure_password_enabled }}"
    network_interfaces: "{{ infrastructure_nic.state.name }}"
    managed_disk_type: "{{ infrastructure_managed_disk_type }}"
    os_disk_size_gb: "{{ infrastructure_os_disk_size_gb }}"
    plan: "{{ infrastructure_plan | default(omit) }}"
    accept_terms: "{{ infrastructure_plan is defined }}"
    image: "{{ infrastructure_image }}"
    location: "{{ infrastructure_region }}"
    tags: "{{ vm_tags }}"
  register: infrastructure_vm

- name: Output the IP of new VM
  ansible.builtin.debug:
    msg:
      - "Public IP for {{ infrastructure_vm_name }}: {{ infrastructure_pip.state.ip_address }}"
      - "Private IP for {{ infrastructure_vm_name }}: {{ infrastructure_nic.state.ip_configuration.private_ip_address }}"

- name: Set stats for new VM
  ansible.builtin.set_stats:
    data:
      "{{ infrastructure_vm_name | replace('-','_') }}_public_ip": "{{ infrastructure_pip.state.ip_address }}"
      "{{ infrastructure_vm_name | replace('-','_') }}_priv_network_private_ip": "{{ infrastructure_nic.state.ip_configuration.private_ip_address }}"

- name: Add public IP hosts to group
  ansible.builtin.add_host:
    groups: "{{ public_host_groups + ['public'] | default(['public']) }}"
    name: "{{ infrastructure_pip.state.ip_address }}"

- name: Add private IPs hosts to group
  ansible.builtin.add_host:
    groups: "{{ private_host_groups + ['private'] | default(['private']) }}"
    name: "{{ infrastructure_nic.state.ip_configuration.private_ip_address }}"
