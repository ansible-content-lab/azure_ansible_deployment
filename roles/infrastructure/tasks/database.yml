---
- name: Check DB server credentials are defined
  ansible.builtin.assert:
    that:
      - infrastructure_database_server_user is defined
      - infrastructure_database_server_password is defined

- name: Create PostgreSQL Flexible Server
  azure.azcollection.azure_rm_resource:
    idempotency: true
    provider: DBforPostgreSQL
    resource_group: "{{ resource_group }}"
    resource_name: db-{{ deployment_id }}
    resource_type: flexibleServers
    api_version: "2022-12-01"
    body:
      location: "{{ infrastructure_region }}"
      sku:
        tier: "{{ infrastructure_database_server_sku_tier }}"
        name: "{{ infrastructure_database_server_sku_name }}"
      properties:
        administratorLogin: "{{ infrastructure_database_server_user }}"
        administratorLoginPassword: "{{ infrastructure_database_server_password }}"
        version: "{{ infrastructure_database_server_version }}"
        charset: "{{ infrastructure_database_server_charset }}"
        collation: "{{ infrastructure_database_server_collation }}"
        storage:
          storageSizeGB: "{{ infrastructure_database_server_size }}"
        network:
          "delegatedSubnetResourceId": "{{ (infrastructure_subnets.results | selectattr('skipped', 'undefined') |
            selectattr('state.id', 'search', 'postgres'))[0].state.id }}"
          "privateDnsZoneArmResourceId": "{{ infrastructure_private_zone.state.id }}"
      tags: "{{ _infrastructure_tags }}"

- name: Wait for PostgreSQL Flexible Server to finish provisioning
  azure.azcollection.azure_rm_resource_info:
    provider: DBforPostgreSQL
    resource_group: "{{ resource_group }}"
    resource_name: db-{{ deployment_id }}
    resource_type: flexibleServers
    api_version: "2022-12-01"
  register: result
  until:
    - result.response is defined
    - result.response | length > 0
    - result.response[0].properties is defined
    - result.response[0].properties.state == 'Ready'
  retries: 60
  delay: 60

- name: Create database for controller
  azure.azcollection.azure_rm_resource:
    idempotency: true
    resource_name: db-{{ deployment_id }}
    resource_group: "{{ resource_group }}"
    provider: DBforPostgreSQL
    resource_type: flexibleServers
    subresource:
      - name: controller
        type: databases
    body:
      properties:
        charset: "{{ infrastructure_database_server_charset }}"
        collation: "{{ infrastructure_database_server_collation }}"

- name: Create database for hub
  azure.azcollection.azure_rm_resource:
    idempotency: true
    resource_name: db-{{ deployment_id }}
    resource_group: "{{ resource_group }}"
    provider: DBforPostgreSQL
    resource_type: flexibleServers
    subresource:
      - name: hub
        type: databases
    body:
      properties:
        charset: "{{ infrastructure_database_server_charset }}"
        collation: "{{ infrastructure_database_server_collation }}"
  when: (infrastructure_virtual_machines | selectattr("name", "eq", "hub") | first).instances > 0

- name: Create database for Event-Driven Ansible
  azure.azcollection.azure_rm_resource:
    idempotency: true
    resource_name: db-{{ deployment_id }}
    resource_group: "{{ resource_group }}"
    provider: DBforPostgreSQL
    resource_type: flexibleServers
    subresource:
      - name: eda
        type: databases
    body:
      properties:
        charset: "{{ infrastructure_database_server_charset }}"
        collation: "{{ infrastructure_database_server_collation }}"
  when: (infrastructure_virtual_machines | selectattr("name", "eq", "eda") | first).instances > 0

- name: Get list of enabled extensions
  azure.azcollection.azure_rm_resource_info:
    provider: DBforPostgreSQL
    resource_group: "{{ resource_group }}"
    resource_name: db-{{ deployment_id }}/configurations/azure.extensions
    resource_type: flexibleServers
    api_version: "2022-12-01"
  register: postgresql_info

- name: Enable extensions
  azure.azcollection.azure_rm_resource:
    idempotency: true
    provider: DBforPostgreSQL
    resource_group: "{{ resource_group }}"
    resource_name: db-{{ deployment_id }}/configurations/azure.extensions
    resource_type: flexibleServers
    body: "{{ postgresql_info.response[0] |
      combine({'properties': {'value': (infrastructure_database_extensions | default('') | join(',')), 'source': 'user-override'}}) }}"

- name: Identify the database properties
  ansible.builtin.set_fact:
    database_fqdn: "{{ result.response[0].properties.fullyQualifiedDomainName }}"
    database_username: "{{ result.response[0].properties.administratorLogin }}"
