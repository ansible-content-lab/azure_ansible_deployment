---
- name: Check for required variables
  ansible.builtin.assert:
    that:
      - aap_red_hat_username is defined
      - aap_red_hat_username | length > 0
      - aap_red_hat_password is defined
      - aap_red_hat_password | length > 0
      - infrastructure_database_server_user is defined
      - infrastructure_database_server_user | length > 0
      - infrastructure_database_server_password is defined
      - infrastructure_database_server_password | length > 0
      - aap_admin_password is defined
      - aap_admin_password | length > 0

- name: Check AAP controller configuration
  ansible.builtin.assert:
    that:
      - (infrastructure_virtual_machines | selectattr("name", "eq", "controller") | first).instances > 0
    msg: This tool must install at least one instance of automation controller

- name: Create deployment details
  ansible.builtin.include_tasks: deployment.yml

- name: Set tag variables
  ansible.builtin.include_tasks: tags.yml

- name: Create the resource group
  azure.azcollection.azure_rm_resourcegroup:
    name: "{{ resource_group }}"
    location: "{{ infrastructure_region }}"

- name: Configure the network
  ansible.builtin.include_tasks: network.yml

- name: Create the database
  ansible.builtin.include_tasks: database.yml

- name: Create controller VMs
  ansible.builtin.include_tasks: controller.yml

- name: Create Execution Node VMs
  ansible.builtin.include_tasks: execution.yml

- name: Create hub VMs
  ansible.builtin.include_tasks: hub.yml

- name: Create EDA VMs
  ansible.builtin.include_tasks: eda.yml

- name: Remote tasks
  connection: ssh
  block:
    - name: Copy an SSH private key to the installer host to connect to other servers
      ansible.builtin.copy:
        remote_src: false
        src: "{{ lookup('env', 'HOME') + '/.ssh/' + infrastructure_keypair_name }}"
        dest: /home/{{ ansible_ssh_user }}/.ssh/{{ infrastructure_keypair_name }}
        owner: "{{ ansible_ssh_user }}"
        group: "{{ ansible_ssh_user }}"
        mode: '0600'
      loop: "{{ groups.installer }}"
      delegate_to: "{{ item }}"

    - name: Copy ssh config to make calling the AAP installer cleaner
      ansible.builtin.template:
        src: config.j2
        dest: /home/{{ ansible_ssh_user }}/.ssh/config
        mode: '0644'
      loop: "{{ groups.installer }}"
      delegate_to: "{{ item }}"

    - name: Copy ssh config to make calling the AAP installer cleaner
      ansible.builtin.template:
        src: config.j2
        dest: /root/.ssh/config
        mode: '0644'
      become: true
      loop: "{{ groups.installer }}"
      delegate_to: "{{ item }}"

    - name: Prepare AAP install - copy inventory to install server
      vars:
        aap_controller_hosts: "{{ groups.controller_private }}"
        aap_ee_hosts: "{{ groups.execution_private | default('') }}"
        aap_hub_hosts: "{{ groups.hub_private | default('') }}"
        aap_eda_hosts: "{{ groups.eda_private | default('') }}"
        aap_eda_allowed_hostnames: "{{ (groups.eda_public | default([])) | join(',') }}"
        aap_db_host: "{{ hostvars.localhost.result.response[0].properties.fullyQualifiedDomainName }}"
      ansible.builtin.template:
        src: inventory.j2
        dest: "{{ infrastructure_aap_installer_inventory_path }}"
        mode: '0644'
      become: true
      loop: "{{ groups.installer }}"
      delegate_to: "{{ item }}"

- name: Wait 10 mins for all VMs to become available
  ansible.builtin.wait_for:
    host: "{{ item }}"
    port: 22
    timeout: 600
  loop: "{{ groups.public }}"
